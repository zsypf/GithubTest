import { Button, Checkbox, Form, Input,Radio,Space,Table, Tag,Divider} from 'antd';
import $ from 'jquery';
import React, { useState } from 'react';
import 'antd/dist/antd.css';
import ReactDom from 'react-dom';

const App = () => {
  $.ajax({
    type: "GET",
    url: "https://org93808380.crm5.dynamics.com/api/data/v9.2/cr73b_staff_campagins?$filter=_cr73b_stafflists_value eq df8bb8da-dd54-ed11-9562-0022485ad62e",
    async: true,
    headers: {
      "OData-MaxVersion": "4.0",
      "OData-Version": "4.0",
      "Content-Type": "application/json; charset=utf-8",
      "Accept": "application/json",
      "Prefer": "odata.include-annotations=*"
    },
    success: function (data, textStatus, xhr) {
      var results = data;
      console.log(results);
      for (var i = 0; i < results.value.length; i++) {
        var result = results.value[i];
        // Columns
        var cr73b_staff_campaginid = result["cr73b_staff_campaginid"]; // Guid
      }
    },
    error: function (xhr, textStatus, errorThrown) {
      console.log(xhr);
    }
  });

  const [selectionType, setSelectionType] = useState('checkbox');
  const [componentSize, setComponentSize] = useState('default');
  const onFormLayoutChange = ({ size }) => {
    setComponentSize(size);
  };

  const onFinishFailed = (errorInfo) => {
    console.log('Failed:', errorInfo);
  };
  const onFinish = (values) => {
    console.log('Success:', values);
  };
  const { Search } = Input;
  const onSearch = (value) => console.log(value);
  const columns = [
    {
      title: 'Staff Name',
      dataIndex: 'name',
      render: (text) => <a>{text}</a>,
    },
    {
      title: 'Staff Email',
      dataIndex: 'email',
    },
    {
      title: 'LANID',
      dataIndex: 'id',
    },
  ];
  const data = [
    {
      key: '1',
      name: 'John Brown',
      age: 32,
      address: 'New York No. 1 Lake Park',
    },
    {
      key: '2',
      name: 'Jim Green',
      age: 42,
      address: 'London No. 1 Lake Park',
    },
    {
      key: '3',
      name: 'Joe Black',
      age: 32,
      address: 'Sidney No. 1 Lake Park',
    },
  ];
  
  // rowSelection object indicates the need for row selection
  const rowSelection = {
    onChange: (selectedRowKeys, selectedRows) => {
      console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);
    },
    getCheckboxProps: (record) => ({
      disabled: record.name === 'Disabled User',
      // Column configuration not to be checked
      name: record.name,
    }),
  };

  return (
    
    <Form
      name="basic"
      labelCol={{
        span: 8,
      }}
      wrapperCol={{
        span: 16,
      }}
      initialValues={{
        remember: true,
      }}
      onFinish={onFinish}
      onFinishFailed={onFinishFailed}
      autoComplete="off"
    >
      <Form.Item label="Assign Set Up">
        <h3 >Assign Set Up</h3>
      </Form.Item>
      <Form.Item label="Group By">
          <Radio.Group>
            <Radio value="Mobile Phone"> Mobile Phone </Radio>
            <Radio value="Insured Name"> Insured Name </Radio>
            <Radio value="payor Name"> payor Name </Radio>
            <Radio value="Last Name"> Last Name </Radio>
            <Radio value="agent code"> agent code </Radio>
          </Radio.Group>
      </Form.Item>
      <Form.Item label="Assign Persontage% ">
        <h3>XXX</h3>
      </Form.Item>
      <Form.Item label="Leads Per Staff ">
        <h3>XXX</h3>
      </Form.Item>
      <Form.Item label="Foreign">
          <Radio.Group>
            <Radio value="Mobile Phone"> Y </Radio>
            <Radio value="Insured Name"> N </Radio>
          </Radio.Group>
      </Form.Item>
      <Form.Item label="" style={{marginLeft:'1000px'}}>
    <Search
      placeholder="input search text"
      onSearch={onSearch}
      style={{
        width: 200,
      }}
    />
      </Form.Item>

      

      <div>
      <Divider />
      <Table
        rowSelection={{
          type: selectionType,
          ...rowSelection,
        }}
        columns={columns}
        dataSource={data}
      />
    </div>
      {/* <Form.Item
        name="remember"
        valuePropName="checked"
        wrapperCol={{
          offset: 8,
          span: 16,
        }}
      >
        <Checkbox>Remember me</Checkbox>
      </Form.Item> */}
      
      <Form.Item
        wrapperCol={{
          offset: 8,
          span: 16,
        }}
      >
        
        <Button  htmlType="submit">
          Cancel
        </Button>
        <Button type="primary" htmlType="submit">
          Save
        </Button>
      </Form.Item>
        
    </Form>
  );
};
export default App;
ReactDom.render(<App/>,document.getElementById('root'))